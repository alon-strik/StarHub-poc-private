tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://172.60.0.4:8000/cloudify-types.yaml
  - http://172.60.0.4:8000/fabric-plugin.yaml
  - plugins/cloudify-openstack-plugin/plugin.yaml

inputs:

  agent_user:
    default: admin

  checkpoint_image:
   default: 'f5655305-ba0f-4a13-aee5-ecb63f8224ff' # snapshot CheckPoint2402_v1

  flavor:
    default: '5'

  agent_password:
    default: admin

# inpute from composition
  lb_network:
    type: string
    default: Tenant-a-LBnetwork

# inpute from composition
  lb_network_subnet:
    type: string
    default: Tenant-a-LBnetwork-subnet

# inpute from composition
  app_network:
    type: string
    default: Tenant-a-APPnetwork

# inpute from composition
  app_network_subnet:
    type: string
    default: Tenant-a-APPnetwork-subnet

  external_network_name:
    type: string
    default: VIO-External-01_VLAN301

  management_network_name:
     type: string
     default: cloudify-management-network

  fw_lb_port:
    type: string
    default: '172.30.0.250'

  fw_app_port:
    type: string
    default: '172.20.0.4'

node_types:

  port_node_type:
     derived_from: cloudify.nodes.SoftwareComponent

node_templates:

  checkpointServer:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image:  { get_input: checkpoint_image }
      flavor: { get_input: flavor }
    interfaces:
      cloudify.interfaces.lifecycle:
       create:
         inputs:
           args:
             nics:
                - net-id: { get_attribute: [ management_network, external_id ] }
                - port-id: { get_attribute: [ lb_network_port, external_id ] }
                - port-id: { get_attribute: [ app_network_port, external_id ] }

    relationships:
        - target: checkpointPortConfig
          type: cloudify.relationships.connected_to
        - target: lb_network_port
          type: cloudify.relationships.connected_to
        - target: app_network_port
          type: cloudify.relationships.connected_to

        - target: server_float_ip
          type: cloudify.openstack.server_connected_to_floating_ip

  networkConfig:
    type: cloudify.nodes.Compute
    properties:
      install_agent: false

  checkpointPortConfig:
    type: port_node_type
    relationships:
        - target: lb_network_port
          type: cloudify.relationships.depends_on
        - target: app_network_port
          type: cloudify.relationships.depends_on
        - target: networkConfig
          type: cloudify.relationships.contained_in

#  LB network

  lb_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network }
      use_external_resource : true

  lb_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network_subnet }
      use_external_resource : true
    relationships:
      - target: lb_network
        type: cloudify.relationships.contained_in

  lb_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
      fixed_ip:  { get_input: fw_lb_port } #172.30.0.250
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network
      - type: cloudify.relationships.depends_on
        target: lb_network_subnet

#  APP network

  app_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: app_network }
      use_external_resource : true

  app_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: app_network_subnet }
      use_external_resource : true
    relationships:
      - target: app_network
        type: cloudify.relationships.contained_in

  app_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
      fixed_ip: { get_input: fw_app_port } #172.20.0.4
    relationships:
      - type: cloudify.relationships.contained_in
        target: app_network
      - type: cloudify.relationships.depends_on
        target: app_network_subnet

  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

  management_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: management_network_name }

outputs:
  fw_app_ip :
      value : { get_attribute: [ app_network_port, fixed_ip_address ]}
  fw_lb_ip:
      value : { get_attribute: [ lb_network_port, fixed_ip_address ]}


