tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - plugins/cloudify-openstack-plugin/plugin.yaml

inputs:

  agent_user:
    default: root

  image_id:
    default: '74ff4015-aee1-4e02-aaa8-1c77b2650394'

  flavor_id:
    default: '196235bc-7ca5-4085-ac81-7e0242bda3f9'

  agent_password:
    default: password

  lb_network:
    type: string
    default: Tenant-a-LBnetwork

  lb_network_subnet:
    type: string
    default: Tenant-a-LBnetwork-subnet

  external_network_name:
    type: string
    default: external

  management_network_name:
     type: string
     default: cloudify-management-network-3.3.1

  management_subnet_name:
    default: cloudify-management-network-subnet-3.3.1
    type: string

node_types:

    port_node_type:
       derived_from: cloudify.nodes.SoftwareComponent

node_templates:

  vtmServer:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image:  { get_input: image_id }
      flavor: { get_input: flavor_id }
    interfaces:
      cloudify.interfaces.lifecycle:
       create:
         inputs:
           args:
             nics:
                - port-id: { get_attribute: [ manager_port, external_id ] }
                - port-id: { get_attribute: [ lb_network_port, external_id ] }

    relationships:
        - target: vtmPortConfig
          type: cloudify.relationships.connected_to
        - target: lb_network_port
          type: cloudify.relationships.connected_to

#        - target: server_float_ip
#          type: cloudify.openstack.server_connected_to_floating_ip

  networkConfig:
    type: cloudify.nodes.Compute
    properties:
      install_agent: false

  vtmPortConfig:
    type: port_node_type
    relationships:
        - target: lb_network_port
          type: cloudify.relationships.depends_on
        - target: networkConfig
          type: cloudify.relationships.contained_in

#  LB network

  lb_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network }
      use_external_resource : false

  lb_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network_subnet }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 172.30.0.0/24
    relationships:
      - target: lb_network
        type: cloudify.relationships.contained_in

  lb_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
      fixed_ip: 172.30.0.10
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network
      - type: cloudify.relationships.depends_on
        target: lb_network_subnet

#  server_float_ip:
#    type: cloudify.openstack.nodes.FloatingIP
#    properties:
#      floatingip:
#        floating_network_name: { get_input: external_network_name }

  management_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: management_network_name }

  management_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      use_external_resource: true
      resource_id: { get_input: management_subnet_name }
    relationships:
      - target: management_network
        type: cloudify.relationships.contained_in

  manager_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource: false
#      fixed_ip: 10.67.79.10
    relationships:
      - type: cloudify.relationships.contained_in
        target: management_network
      - type: cloudify.relationships.depends_on
        target: management_subnet
